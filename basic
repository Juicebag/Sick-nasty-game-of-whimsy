Class Character(object):
	def __init__ (self, status, stats, inv, pos, helm, chest, leg, gaunt, onhand, offhand, facton, desc, currency, lvl)
		self.status = status
		self.stats = stats
		self.inv = inv
		self.pos = pos
		self.helm = helm
		self.chest = chest
		self.leg = leg
		self.gaunt = gaunt
		self.onhand = onhand
		self.offhand = offhand
		self.faction = faction
		self.desc = desc
		self.currency = currencey
		self.lvl = lvl
	def __repr__(self)
		return (self)
		
	def move (self, dest)
		if dest in self.pos.adj:
			return (self.pos = dest , dest.inhab += self)	
		else:
			print ("you can't got to" dest "from here")
			return (self.pos = self.pos)
			
	def take (self, target)
		if self.pos.items.contains(target):
			return(self.inv += target)
		else:
			return()
			
	def equip (self, target)
		if not target in inv:
			return ()
		elif target in inv:
			self.inv += self.(target.type) 
			self.(target.type) = target
			
	def levelup (self, stat)
		x = self.lvl
		if self.currency < 0.02x**3 + 3.06x**2 + 105.6x - 895:
			print("u can't lvl up")
			return ()
		elif self.currency >= 0.02x**3 + 3.06x**2 + 105.6x - 895:
			return self.stats[stat] += 1
	
Class Room(object)
	def __init__ (self, code, adj, desc, items, inhab)
		self.code=code
		self.adj = adj
		self.desc = desc
		self.items = items
		self.inhab = inhab

###def interpret(comm)
	#if ' ' not in comm == 1 or( 'move' not in comm == 1 '
		#return ('I don't understand that command')###
 
    def modify_player(self, enemy):
        if self.enemy.is_alive():
            the_player.hp = the_player.hp - self.enemy.damage
	    
          
